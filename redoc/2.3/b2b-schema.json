{
    "swagger": "2.0",
    "info": {
        "version": "dev-2.3-develop",
        "title": "Magento B2B"
    },
    "host": "magento2.vagrant12",
    "basePath": "/rest/default",
    "schemes": [
        "http"
    ],
    "tags": [
        {
            "name": "companyAclV1",
            "description": "Access control list interface."
        },
        {
            "name": "companyCompanyHierarchyV1",
            "description": "Interface for working with company hierarchy."
        },
        {
            "name": "companyCompanyRepositoryV1",
            "description": "A repository interface for company entity that provides basic CRUD operations."
        },
        {
            "name": "companyRoleRepositoryV1",
            "description": "A repository interface for role entity that provides basic CRUD operations."
        },
        {
            "name": "companyTeamRepositoryV1",
            "description": "Interface for basic CRUD operations for team entity."
        },
        {
            "name": "companyCreditCreditBalanceManagementV1",
            "description": "Interface for management decrease and increase credit balance operations."
        },
        {
            "name": "companyCreditCreditHistoryManagementV1",
            "description": "Update credit history log and retrieve history which match a specified criteria."
        },
        {
            "name": "companyCreditCreditLimitManagementV1",
            "description": "Credit Limit management interface."
        },
        {
            "name": "companyCreditCreditLimitRepositoryV1",
            "description": "Interface for credit limit repository for CRUD operations."
        },
        {
            "name": "negotiableQuoteAttachmentContentManagementV1",
            "description": "Interface for retrieving the list of negotiable quotes attachments."
        },
        {
            "name": "negotiableQuoteBillingAddressManagementV1",
            "description": "Interface BillingAddressManagementInterface"
        },
        {
            "name": "negotiableQuoteCartTotalRepositoryV1",
            "description": "Interface CartTotalRepositoryInterface"
        },
        {
            "name": "negotiableQuoteCommentLocatorV1",
            "description": "Interface for load quote comments with attachment."
        },
        {
            "name": "negotiableQuoteCouponManagementV1",
            "description": "Coupon management service interface."
        },
        {
            "name": "negotiableQuoteGiftCardAccountManagementV1",
            "description": "Interface GiftCardAccountManagementInterface"
        },
        {
            "name": "negotiableQuoteNegotiableQuoteManagementV1",
            "description": "Interface for managing quotes."
        },
        {
            "name": "negotiableQuoteNegotiableQuotePriceManagementV1",
            "description": "Interface for updating quote prices in case price changes occur in system."
        },
        {
            "name": "negotiableQuoteNegotiableQuoteShippingManagementV1",
            "description": "Interface for add and update negotiable quote shipping method."
        },
        {
            "name": "negotiableQuotePaymentInformationManagementV1",
            "description": "Interface for managing quote payment information"
        },
        {
            "name": "negotiableQuoteShipmentEstimationV1",
            "description": "Interface ShipmentManagementInterface"
        },
        {
            "name": "negotiableQuoteShippingInformationManagementV1",
            "description": "Interface for managing customer shipping address information"
        },
        {
            "name": "negotiableQuoteShippingMethodManagementV1",
            "description": "Interface ShippingMethodManagementInterface"
        },
        {
            "name": "sharedCatalogCategoryManagementV1",
            "description": "Shared catalog products actions."
        },
        {
            "name": "sharedCatalogCompanyManagementV1",
            "description": "Shared catalog companies actions."
        },
        {
            "name": "sharedCatalogProductManagementV1",
            "description": "Shared catalog products actions."
        },
        {
            "name": "sharedCatalogSharedCatalogRepositoryV1",
            "description": ""
        },
        {
            "name": "negotiableQuoteNegotiableCartRepositoryV1",
            "description": "Interface is intended to be used in webapi only. For other cases CartRepositoryInterface should be used."
        },
        {
            "name": "requisitionListRequisitionListRepositoryV1",
            "description": "Interface RequisitionListRepositoryInterface"
        }
    ],
    "paths": {
        "/V1/company/assignRoles": {
            "put": {
                "tags": [
                    "companyAclV1"
                ],
                "description": "Change a role for a company user.",
                "operationId": "companyAclV1AssignRolesPut",
                "parameters": [
                    {
                        "name": "companyAclV1AssignRolesPutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "userId",
                                "roles"
                            ],
                            "properties": {
                                "userId": {
                                    "type": "integer"
                                },
                                "roles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/company-data-role-interface"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/role/{roleId}/users": {
            "get": {
                "tags": [
                    "companyAclV1"
                ],
                "description": "View the list of company users assigned to a specified role.",
                "operationId": "companyAclV1GetUsersByRoleIdGet",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-customer-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/hierarchy/{id}": {
            "get": {
                "tags": [
                    "companyCompanyHierarchyV1"
                ],
                "description": "Returns the list of teams and company users in the company structure.",
                "operationId": "companyCompanyHierarchyV1GetCompanyHierarchyGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/company-data-hierarchy-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/hierarchy/move/{id}": {
            "put": {
                "tags": [
                    "companyCompanyHierarchyV1"
                ],
                "description": "Moves teams and users within the company structure.",
                "operationId": "companyCompanyHierarchyV1MoveNodePut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "companyCompanyHierarchyV1MoveNodePutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "newParentId"
                            ],
                            "properties": {
                                "newParentId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/": {
            "get": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Returns the list of companies. The list is an array of objects, and detailed information about item attributes might not be included.",
                "operationId": "companyCompanyRepositoryV1GetListGet",
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Create or update a company account.",
                "operationId": "companyCompanyRepositoryV1SavePost",
                "parameters": [
                    {
                        "name": "companyCompanyRepositoryV1SavePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "company"
                            ],
                            "properties": {
                                "company": {
                                    "$ref": "#/definitions/company-data-company-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/{companyId}": {
            "get": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Returns company details.",
                "operationId": "companyCompanyRepositoryV1GetGet",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Delete a company. Customers belonging to a company are not deleted with this request.",
                "operationId": "companyCompanyRepositoryV1DeleteByIdDelete",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Create or update a company account.",
                "operationId": "companyCompanyRepositoryV1SavePut",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "companyCompanyRepositoryV1SavePutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "company"
                            ],
                            "properties": {
                                "company": {
                                    "$ref": "#/definitions/company-data-company-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/role/": {
            "get": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Returns the list of roles and permissions for a specified company.",
                "operationId": "companyRoleRepositoryV1GetListGet",
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-role-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Create or update a role for a selected company.",
                "operationId": "companyRoleRepositoryV1SavePost",
                "parameters": [
                    {
                        "name": "companyRoleRepositoryV1SavePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "role"
                            ],
                            "properties": {
                                "role": {
                                    "$ref": "#/definitions/company-data-role-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-role-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/role/{roleId}": {
            "get": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Returns the list of permissions for a specified role.",
                "operationId": "companyRoleRepositoryV1GetGet",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-role-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Delete a role.",
                "operationId": "companyRoleRepositoryV1DeleteDelete",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/role/{id}": {
            "put": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Create or update a role for a selected company.",
                "operationId": "companyRoleRepositoryV1SavePut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "companyRoleRepositoryV1SavePutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "role"
                            ],
                            "properties": {
                                "role": {
                                    "$ref": "#/definitions/company-data-role-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-role-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/team/": {
            "get": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Returns the list of teams for the specified search criteria (team name or description).",
                "operationId": "companyTeamRepositoryV1GetListGet",
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-team-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/team/{teamId}": {
            "get": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Returns data for a team in the company, by entity id.",
                "operationId": "companyTeamRepositoryV1GetGet",
                "parameters": [
                    {
                        "name": "teamId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-team-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Delete a team from the company structure.",
                "operationId": "companyTeamRepositoryV1DeleteByIdDelete",
                "parameters": [
                    {
                        "name": "teamId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Update a team in the company structure.",
                "operationId": "companyTeamRepositoryV1SavePut",
                "parameters": [
                    {
                        "name": "teamId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "companyTeamRepositoryV1SavePutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "team"
                            ],
                            "properties": {
                                "team": {
                                    "$ref": "#/definitions/company-data-team-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/team/{companyId}": {
            "post": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Create a team in the company structure.",
                "operationId": "companyTeamRepositoryV1CreatePost",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "companyTeamRepositoryV1CreatePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "team"
                            ],
                            "properties": {
                                "team": {
                                    "$ref": "#/definitions/company-data-team-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/{creditId}/increaseBalance": {
            "post": {
                "tags": [
                    "companyCreditCreditBalanceManagementV1"
                ],
                "description": "Increases the company credit with an Allocate, Update, Refund, Revert, or Reimburse transaction. This transaction decreases company's outstanding balance and increases company's available credit.",
                "operationId": "companyCreditCreditBalanceManagementV1IncreasePost",
                "parameters": [
                    {
                        "name": "creditId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "companyCreditCreditBalanceManagementV1IncreasePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "value",
                                "currency",
                                "operationType"
                            ],
                            "properties": {
                                "value": {
                                    "type": "number"
                                },
                                "currency": {
                                    "type": "string"
                                },
                                "operationType": {
                                    "type": "integer"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "[optional]"
                                },
                                "options": {
                                    "$ref": "#/definitions/company-credit-data-credit-balance-options-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/{creditId}/decreaseBalance": {
            "post": {
                "tags": [
                    "companyCreditCreditBalanceManagementV1"
                ],
                "description": "Decreases the company credit with an Update, Reimburse, or Purchase transaction. This transaction increases company's outstanding balance and decreases company's available credit.",
                "operationId": "companyCreditCreditBalanceManagementV1DecreasePost",
                "parameters": [
                    {
                        "name": "creditId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "companyCreditCreditBalanceManagementV1DecreasePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "value",
                                "currency",
                                "operationType"
                            ],
                            "properties": {
                                "value": {
                                    "type": "number"
                                },
                                "currency": {
                                    "type": "string"
                                },
                                "operationType": {
                                    "type": "integer"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "[optional]"
                                },
                                "options": {
                                    "$ref": "#/definitions/company-credit-data-credit-balance-options-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/history": {
            "get": {
                "tags": [
                    "companyCreditCreditHistoryManagementV1"
                ],
                "description": "Returns the credit history for one or more companies.",
                "operationId": "companyCreditCreditHistoryManagementV1GetListGet",
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-history-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/history/{historyId}": {
            "put": {
                "tags": [
                    "companyCreditCreditHistoryManagementV1"
                ],
                "description": "Update the PO Number and/or comment for a Reimburse transaction.",
                "operationId": "companyCreditCreditHistoryManagementV1UpdatePut",
                "parameters": [
                    {
                        "name": "historyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "companyCreditCreditHistoryManagementV1UpdatePutBody",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "purchaseOrder": {
                                    "type": "string",
                                    "description": "[optional]"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "[optional]"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/company/{companyId}": {
            "get": {
                "tags": [
                    "companyCreditCreditLimitManagementV1"
                ],
                "description": "Returns data on the credit limit for a specified company.",
                "operationId": "companyCreditCreditLimitManagementV1GetCreditByCompanyIdGet",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-credit-limit-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/": {
            "get": {
                "tags": [
                    "companyCreditCreditLimitRepositoryV1"
                ],
                "description": "Returns the list of credits for specified companies.",
                "operationId": "companyCreditCreditLimitRepositoryV1GetListGet",
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-credit-limit-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/{creditId}": {
            "get": {
                "tags": [
                    "companyCreditCreditLimitRepositoryV1"
                ],
                "description": "Returns data on the credit limit for a specified credit limit ID.",
                "operationId": "companyCreditCreditLimitRepositoryV1GetGet",
                "parameters": [
                    {
                        "name": "creditId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "reload",
                        "in": "query",
                        "type": "boolean",
                        "description": "[optional]",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-credit-limit-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/{id}": {
            "put": {
                "tags": [
                    "companyCreditCreditLimitRepositoryV1"
                ],
                "description": "Update the following company credit attributes: credit currency, credit limit and setting to exceed credit.",
                "operationId": "companyCreditCreditLimitRepositoryV1SavePut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "companyCreditCreditLimitRepositoryV1SavePutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "creditLimit"
                            ],
                            "properties": {
                                "creditLimit": {
                                    "$ref": "#/definitions/company-credit-data-credit-limit-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-credit-limit-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/attachmentContent": {
            "get": {
                "tags": [
                    "negotiableQuoteAttachmentContentManagementV1"
                ],
                "description": "Returns content for one or more files attached on the quote comment.",
                "operationId": "negotiableQuoteAttachmentContentManagementV1GetGet",
                "parameters": [
                    {
                        "name": "attachmentIds",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/negotiable-quote-data-attachment-content-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/billing-address": {
            "get": {
                "tags": [
                    "negotiableQuoteBillingAddressManagementV1"
                ],
                "description": "Returns the billing address for a specified quote.",
                "operationId": "negotiableQuoteBillingAddressManagementV1GetGet",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-address-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "negotiableQuoteBillingAddressManagementV1"
                ],
                "description": "Assigns a specified billing address to a specified cart.",
                "operationId": "negotiableQuoteBillingAddressManagementV1AssignPost",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "negotiableQuoteBillingAddressManagementV1AssignPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                },
                                "useForShipping": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Address ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/totals": {
            "get": {
                "tags": [
                    "negotiableQuoteCartTotalRepositoryV1"
                ],
                "description": "Returns quote totals data for a specified cart.",
                "operationId": "negotiableQuoteCartTotalRepositoryV1GetGet",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-totals-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/{quoteId}/comments": {
            "get": {
                "tags": [
                    "negotiableQuoteCommentLocatorV1"
                ],
                "description": "Returns comments for a specified negotiable quote.",
                "operationId": "negotiableQuoteCommentLocatorV1GetListForQuoteGet",
                "parameters": [
                    {
                        "name": "quoteId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "Negotiable Quote ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "An array of quote comments.",
                            "items": {
                                "$ref": "#/definitions/negotiable-quote-data-comment-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/coupons/{couponCode}": {
            "put": {
                "tags": [
                    "negotiableQuoteCouponManagementV1"
                ],
                "description": "Adds a coupon by code to a specified cart.",
                "operationId": "negotiableQuoteCouponManagementV1SetPut",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "couponCode",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The coupon code data."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/coupons": {
            "delete": {
                "tags": [
                    "negotiableQuoteCouponManagementV1"
                ],
                "description": "Deletes a coupon from a specified cart.",
                "operationId": "negotiableQuoteCouponManagementV1RemoveDelete",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/giftCards": {
            "post": {
                "tags": [
                    "negotiableQuoteGiftCardAccountManagementV1"
                ],
                "description": "",
                "operationId": "negotiableQuoteGiftCardAccountManagementV1SaveByQuoteIdPost",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "negotiableQuoteGiftCardAccountManagementV1SaveByQuoteIdPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "giftCardAccountData"
                            ],
                            "properties": {
                                "giftCardAccountData": {
                                    "$ref": "#/definitions/gift-card-account-data-gift-card-account-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/giftCards/{giftCardCode}": {
            "delete": {
                "tags": [
                    "negotiableQuoteGiftCardAccountManagementV1"
                ],
                "description": "Remove GiftCard Account entity",
                "operationId": "negotiableQuoteGiftCardAccountManagementV1DeleteByQuoteIdDelete",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "giftCardCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/request": {
            "post": {
                "tags": [
                    "negotiableQuoteNegotiableQuoteManagementV1"
                ],
                "description": "Create a B2B quote based on a regular Magento quote. If the B2B quote requires a shipping address (for negotiation or tax calculations), add it to the regular quote before you create a B2B quote.",
                "operationId": "negotiableQuoteNegotiableQuoteManagementV1CreatePost",
                "parameters": [
                    {
                        "name": "negotiableQuoteNegotiableQuoteManagementV1CreatePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteId",
                                "quoteName"
                            ],
                            "properties": {
                                "quoteId": {
                                    "type": "integer"
                                },
                                "quoteName": {
                                    "type": "string"
                                },
                                "comment": {
                                    "type": "string"
                                },
                                "files": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/negotiable-quote-data-attachment-content-interface"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/submitToCustomer": {
            "post": {
                "tags": [
                    "negotiableQuoteNegotiableQuoteManagementV1"
                ],
                "description": "Submit the B2B quote to the customer. The quote status for the customer will be changed to 'Updated', and the customer can work with the quote.",
                "operationId": "negotiableQuoteNegotiableQuoteManagementV1AdminSendPost",
                "parameters": [
                    {
                        "name": "negotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteId"
                            ],
                            "properties": {
                                "quoteId": {
                                    "type": "integer"
                                },
                                "comment": {
                                    "type": "string"
                                },
                                "files": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/negotiable-quote-data-attachment-content-interface"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/decline": {
            "post": {
                "tags": [
                    "negotiableQuoteNegotiableQuoteManagementV1"
                ],
                "description": "Decline the B2B quote. All custom pricing will be removed from this quote. The buyer will be able to place an order using their standard catalog prices and discounts.",
                "operationId": "negotiableQuoteNegotiableQuoteManagementV1DeclinePost",
                "parameters": [
                    {
                        "name": "negotiableQuoteNegotiableQuoteManagementV1DeclinePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteId",
                                "reason"
                            ],
                            "properties": {
                                "quoteId": {
                                    "type": "integer"
                                },
                                "reason": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/pricesUpdated": {
            "post": {
                "tags": [
                    "negotiableQuoteNegotiableQuotePriceManagementV1"
                ],
                "description": "Refreshes item prices, taxes, discounts, cart rules in the negotiable quote as per the latest changes in the catalog / shared catalog and in the price rules. Depending on the negotiable quote state and totals, all or just some of quote numbers will be recalculated. 'Update Prices' parameter forces refresh on any quote that is not locked for admin user, including the quotes with a negotiated price. The request can be applied to one or more quotes at the same time.",
                "operationId": "negotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPost",
                "parameters": [
                    {
                        "name": "negotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteIds"
                            ],
                            "properties": {
                                "quoteIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/{quoteId}/shippingMethod": {
            "put": {
                "tags": [
                    "negotiableQuoteNegotiableQuoteShippingManagementV1"
                ],
                "description": "Updates the shipping method on a negotiable quote.",
                "operationId": "negotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPut",
                "parameters": [
                    {
                        "name": "quoteId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "Negotiable Quote id"
                    },
                    {
                        "name": "negotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "shippingMethod"
                            ],
                            "properties": {
                                "shippingMethod": {
                                    "type": "string",
                                    "description": "The shipping method code."
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/payment-information": {
            "post": {
                "tags": [
                    "negotiableQuotePaymentInformationManagementV1"
                ],
                "description": "Set payment information and place order for a specified cart.",
                "operationId": "negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "paymentMethod"
                            ],
                            "properties": {
                                "paymentMethod": {
                                    "$ref": "#/definitions/quote-data-payment-interface"
                                },
                                "billingAddress": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Order ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "negotiableQuotePaymentInformationManagementV1"
                ],
                "description": "Get payment information",
                "operationId": "negotiableQuotePaymentInformationManagementV1GetPaymentInformationGet",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/checkout-data-payment-details-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/set-payment-information": {
            "post": {
                "tags": [
                    "negotiableQuotePaymentInformationManagementV1"
                ],
                "description": "Set payment information for a specified cart.",
                "operationId": "negotiableQuotePaymentInformationManagementV1SavePaymentInformationPost",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "negotiableQuotePaymentInformationManagementV1SavePaymentInformationPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "paymentMethod"
                            ],
                            "properties": {
                                "paymentMethod": {
                                    "$ref": "#/definitions/quote-data-payment-interface"
                                },
                                "billingAddress": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Order ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/estimate-shipping-methods": {
            "post": {
                "tags": [
                    "negotiableQuoteShipmentEstimationV1"
                ],
                "description": "Estimate shipping by address and return list of available shipping methods",
                "operationId": "negotiableQuoteShipmentEstimationV1EstimateByExtendedAddressPost",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "negotiableQuoteShipmentEstimationV1EstimateByExtendedAddressPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "An array of shipping methods",
                            "items": {
                                "$ref": "#/definitions/quote-data-shipping-method-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/shipping-information": {
            "post": {
                "tags": [
                    "negotiableQuoteShippingInformationManagementV1"
                ],
                "description": "",
                "operationId": "negotiableQuoteShippingInformationManagementV1SaveAddressInformationPost",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "negotiableQuoteShippingInformationManagementV1SaveAddressInformationPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "addressInformation"
                            ],
                            "properties": {
                                "addressInformation": {
                                    "$ref": "#/definitions/checkout-data-shipping-information-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/checkout-data-payment-details-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id": {
            "post": {
                "tags": [
                    "negotiableQuoteShippingMethodManagementV1"
                ],
                "description": "Estimate shipping",
                "operationId": "negotiableQuoteShippingMethodManagementV1EstimateByAddressIdPost",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shopping cart ID."
                    },
                    {
                        "name": "negotiableQuoteShippingMethodManagementV1EstimateByAddressIdPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "addressId"
                            ],
                            "properties": {
                                "addressId": {
                                    "type": "integer",
                                    "description": "The estimate address id"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "An array of shipping methods.",
                            "items": {
                                "$ref": "#/definitions/quote-data-shipping-method-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/categories": {
            "get": {
                "tags": [
                    "sharedCatalogCategoryManagementV1"
                ],
                "description": "Return the list of categories in the selected shared catalog.",
                "operationId": "sharedCatalogCategoryManagementV1GetCategoriesGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/assignCategories": {
            "post": {
                "tags": [
                    "sharedCatalogCategoryManagementV1"
                ],
                "description": "Add categories into the shared catalog.",
                "operationId": "sharedCatalogCategoryManagementV1AssignCategoriesPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "sharedCatalogCategoryManagementV1AssignCategoriesPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "categories"
                            ],
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-category-interface"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/unassignCategories": {
            "post": {
                "tags": [
                    "sharedCatalogCategoryManagementV1"
                ],
                "description": "Remove the specified categories from the shared catalog.",
                "operationId": "sharedCatalogCategoryManagementV1UnassignCategoriesPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "sharedCatalogCategoryManagementV1UnassignCategoriesPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "categories"
                            ],
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-category-interface"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}/companies": {
            "get": {
                "tags": [
                    "sharedCatalogCompanyManagementV1"
                ],
                "description": "Return the list of company IDs for the companies assigned to the selected catalog.",
                "operationId": "sharedCatalogCompanyManagementV1GetCompaniesGet",
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}/assignCompanies": {
            "post": {
                "tags": [
                    "sharedCatalogCompanyManagementV1"
                ],
                "description": "Assign companies to a shared catalog.",
                "operationId": "sharedCatalogCompanyManagementV1AssignCompaniesPost",
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "sharedCatalogCompanyManagementV1AssignCompaniesPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "companies"
                            ],
                            "properties": {
                                "companies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/company-data-company-interface"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}/unassignCompanies": {
            "post": {
                "tags": [
                    "sharedCatalogCompanyManagementV1"
                ],
                "description": "Unassign companies from a shared catalog.",
                "operationId": "sharedCatalogCompanyManagementV1UnassignCompaniesPost",
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "sharedCatalogCompanyManagementV1UnassignCompaniesPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "companies"
                            ],
                            "properties": {
                                "companies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/company-data-company-interface"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/products": {
            "get": {
                "tags": [
                    "sharedCatalogProductManagementV1"
                ],
                "description": "Return the list of product SKUs in the selected shared catalog.",
                "operationId": "sharedCatalogProductManagementV1GetProductsGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/assignProducts": {
            "post": {
                "tags": [
                    "sharedCatalogProductManagementV1"
                ],
                "description": "Add products into the shared catalog.",
                "operationId": "sharedCatalogProductManagementV1AssignProductsPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "sharedCatalogProductManagementV1AssignProductsPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "products"
                            ],
                            "properties": {
                                "products": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-product-interface"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/unassignProducts": {
            "post": {
                "tags": [
                    "sharedCatalogProductManagementV1"
                ],
                "description": "Remove the specified products from the shared catalog.",
                "operationId": "sharedCatalogProductManagementV1UnassignProductsPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "sharedCatalogProductManagementV1UnassignProductsPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "products"
                            ],
                            "properties": {
                                "products": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-product-interface"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}": {
            "get": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Return the following properties for the selected shared catalog: ID, Store Group ID, Name, Type, Description, Customer Group, Tax Class.",
                "operationId": "sharedCatalogSharedCatalogRepositoryV1GetGet",
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/shared-catalog-data-shared-catalog-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Delete a shared catalog by ID.",
                "operationId": "sharedCatalogSharedCatalogRepositoryV1DeleteByIdDelete",
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog": {
            "post": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Create or update Shared Catalog service.",
                "operationId": "sharedCatalogSharedCatalogRepositoryV1SavePost",
                "parameters": [
                    {
                        "name": "sharedCatalogSharedCatalogRepositoryV1SavePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sharedCatalog"
                            ],
                            "properties": {
                                "sharedCatalog": {
                                    "$ref": "#/definitions/shared-catalog-data-shared-catalog-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}": {
            "put": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Create or update Shared Catalog service.",
                "operationId": "sharedCatalogSharedCatalogRepositoryV1SavePut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "sharedCatalogSharedCatalogRepositoryV1SavePutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sharedCatalog"
                            ],
                            "properties": {
                                "sharedCatalog": {
                                    "$ref": "#/definitions/shared-catalog-data-shared-catalog-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/": {
            "get": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Return the list of shared catalogs and basic properties for each catalog.",
                "operationId": "sharedCatalogSharedCatalogRepositoryV1GetListGet",
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/shared-catalog-data-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/{quoteId}": {
            "put": {
                "tags": [
                    "negotiableQuoteNegotiableCartRepositoryV1"
                ],
                "description": "Save quote",
                "operationId": "negotiableQuoteNegotiableCartRepositoryV1SavePut",
                "parameters": [
                    {
                        "name": "quoteId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "negotiableQuoteNegotiableCartRepositoryV1SavePutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quote"
                            ],
                            "properties": {
                                "quote": {
                                    "$ref": "#/definitions/quote-data-cart-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/requisition_lists": {
            "post": {
                "tags": [
                    "requisitionListRequisitionListRepositoryV1"
                ],
                "description": "Save Requisition List",
                "operationId": "requisitionListRequisitionListRepositoryV1SavePost",
                "parameters": [
                    {
                        "name": "requisitionListRequisitionListRepositoryV1SavePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "requisitionList"
                            ],
                            "properties": {
                                "requisitionList": {
                                    "$ref": "#/definitions/requisition-list-data-requisition-list-interface"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/requisition-list-data-requisition-list-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "error-response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Error message"
                },
                "errors": {
                    "$ref": "#/definitions/error-errors"
                },
                "code": {
                    "type": "integer",
                    "description": "Error code"
                },
                "parameters": {
                    "$ref": "#/definitions/error-parameters"
                },
                "trace": {
                    "type": "string",
                    "description": "Stack trace"
                }
            },
            "required": [
                "message"
            ]
        },
        "error-errors": {
            "type": "array",
            "description": "Errors list",
            "items": {
                "$ref": "#/definitions/error-errors-item"
            }
        },
        "error-errors-item": {
            "type": "object",
            "description": "Error details",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Error message"
                },
                "parameters": {
                    "$ref": "#/definitions/error-parameters"
                }
            }
        },
        "error-parameters": {
            "type": "array",
            "description": "Error parameters list",
            "items": {
                "$ref": "#/definitions/error-parameters-item"
            }
        },
        "error-parameters-item": {
            "type": "object",
            "description": "Error parameters item",
            "properties": {
                "resources": {
                    "type": "string",
                    "description": "ACL resource"
                },
                "fieldName": {
                    "type": "string",
                    "description": "Missing or invalid field name"
                },
                "fieldValue": {
                    "type": "string",
                    "description": "Incorrect field value"
                }
            }
        },
        "company-data-role-interface": {
            "type": "object",
            "description": "Role data transfer object interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Role id."
                },
                "role_name": {
                    "type": "string",
                    "description": "Role name."
                },
                "permissions": {
                    "type": "array",
                    "description": "Permissions.",
                    "items": {
                        "$ref": "#/definitions/company-data-permission-interface"
                    }
                },
                "company_id": {
                    "type": "integer",
                    "description": "Company id."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-role-extension-interface"
                }
            },
            "required": [
                "permissions"
            ]
        },
        "company-data-permission-interface": {
            "type": "object",
            "description": "Permission interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id."
                },
                "role_id": {
                    "type": "integer",
                    "description": "Role id."
                },
                "resource_id": {
                    "type": "string",
                    "description": "Resource id."
                },
                "permission": {
                    "type": "string",
                    "description": "Permission."
                }
            },
            "required": [
                "resource_id",
                "permission"
            ]
        },
        "company-data-role-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\RoleInterface"
        },
        "customer-data-customer-interface": {
            "type": "object",
            "description": "Customer interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Customer id"
                },
                "group_id": {
                    "type": "integer",
                    "description": "Group id"
                },
                "default_billing": {
                    "type": "string",
                    "description": "Default billing address id"
                },
                "default_shipping": {
                    "type": "string",
                    "description": "Default shipping address id"
                },
                "confirmation": {
                    "type": "string",
                    "description": "Confirmation"
                },
                "created_at": {
                    "type": "string",
                    "description": "Created at time"
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated at time"
                },
                "created_in": {
                    "type": "string",
                    "description": "Created in area"
                },
                "dob": {
                    "type": "string",
                    "description": "Date of birth"
                },
                "email": {
                    "type": "string",
                    "description": "Email address"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix"
                },
                "gender": {
                    "type": "integer",
                    "description": "Gender"
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store id"
                },
                "taxvat": {
                    "type": "string",
                    "description": "Tax Vat"
                },
                "website_id": {
                    "type": "integer",
                    "description": "Website id"
                },
                "addresses": {
                    "type": "array",
                    "description": "Customer addresses.",
                    "items": {
                        "$ref": "#/definitions/customer-data-address-interface"
                    }
                },
                "disable_auto_group_change": {
                    "type": "integer",
                    "description": "Disable auto group change flag."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-customer-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "email",
                "firstname",
                "lastname"
            ]
        },
        "customer-data-address-interface": {
            "type": "object",
            "description": "Customer address interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID"
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID"
                },
                "region": {
                    "$ref": "#/definitions/customer-data-region-interface"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region ID"
                },
                "country_id": {
                    "type": "string",
                    "description": "Country code in ISO_3166-2 format"
                },
                "street": {
                    "type": "array",
                    "description": "Street",
                    "items": {
                        "type": "string"
                    }
                },
                "company": {
                    "type": "string",
                    "description": "Company"
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone number"
                },
                "fax": {
                    "type": "string",
                    "description": "Fax number"
                },
                "postcode": {
                    "type": "string",
                    "description": "Postcode"
                },
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix"
                },
                "vat_id": {
                    "type": "string",
                    "description": "Vat id"
                },
                "default_shipping": {
                    "type": "boolean",
                    "description": "If this address is default shipping address."
                },
                "default_billing": {
                    "type": "boolean",
                    "description": "If this address is default billing address"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-address-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            }
        },
        "customer-data-region-interface": {
            "type": "object",
            "description": "Customer address region interface.",
            "properties": {
                "region_code": {
                    "type": "string",
                    "description": "Region code"
                },
                "region": {
                    "type": "string",
                    "description": "Region"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-region-extension-interface"
                }
            },
            "required": [
                "region_code",
                "region",
                "region_id"
            ]
        },
        "customer-data-region-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface"
        },
        "customer-data-address-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface"
        },
        "framework-attribute-interface": {
            "type": "object",
            "description": "Interface for custom attribute value.",
            "properties": {
                "attribute_code": {
                    "type": "string",
                    "description": "Attribute code"
                },
                "value": {
                    "type": "string",
                    "description": "Attribute value"
                }
            },
            "required": [
                "attribute_code",
                "value"
            ]
        },
        "customer-data-customer-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface",
            "properties": {
                "company_attributes": {
                    "$ref": "#/definitions/company-data-company-customer-interface"
                },
                "is_subscribed": {
                    "type": "boolean"
                }
            }
        },
        "company-data-company-customer-interface": {
            "type": "object",
            "description": "Extended customer custom attributes interface.",
            "properties": {
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID."
                },
                "company_id": {
                    "type": "integer",
                    "description": "Company ID."
                },
                "job_title": {
                    "type": "string",
                    "description": "Get job title."
                },
                "status": {
                    "type": "integer",
                    "description": "Customer status."
                },
                "telephone": {
                    "type": "string",
                    "description": "Get telephone."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-company-customer-extension-interface"
                }
            }
        },
        "company-data-company-customer-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface"
        },
        "company-data-hierarchy-interface": {
            "type": "object",
            "description": "Company hierarchy DTO interface for WebAPI.",
            "properties": {
                "structure_id": {
                    "type": "integer",
                    "description": "Structure ID."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Entity ID."
                },
                "entity_type": {
                    "type": "string",
                    "description": "Entity type."
                },
                "structure_parent_id": {
                    "type": "integer",
                    "description": "Structure parent ID."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-hierarchy-extension-interface"
                }
            }
        },
        "company-data-hierarchy-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\HierarchyInterface"
        },
        "company-data-company-search-results-interface": {
            "type": "object",
            "description": "Interface for company search results",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Companies list",
                    "items": {
                        "$ref": "#/definitions/company-data-company-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-data-company-interface": {
            "type": "object",
            "description": "Interface for Company entity.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id."
                },
                "status": {
                    "type": "integer",
                    "description": "Status."
                },
                "company_name": {
                    "type": "string",
                    "description": "Company name."
                },
                "legal_name": {
                    "type": "string",
                    "description": "Legal name."
                },
                "company_email": {
                    "type": "string",
                    "description": "Company email."
                },
                "vat_tax_id": {
                    "type": "string",
                    "description": "Vat tax id."
                },
                "reseller_id": {
                    "type": "string",
                    "description": "Reseller Id."
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "street": {
                    "type": "array",
                    "description": "Street.",
                    "items": {
                        "type": "string"
                    }
                },
                "city": {
                    "type": "string",
                    "description": "City."
                },
                "country_id": {
                    "type": "string",
                    "description": "Country."
                },
                "region": {
                    "type": "string",
                    "description": "Region."
                },
                "region_id": {
                    "type": "string",
                    "description": "Region Id."
                },
                "postcode": {
                    "type": "string",
                    "description": "Postcode."
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone."
                },
                "customer_group_id": {
                    "type": "integer",
                    "description": "Customer Group Id."
                },
                "sales_representative_id": {
                    "type": "integer",
                    "description": "Sales Representative Id."
                },
                "reject_reason": {
                    "type": "string",
                    "description": "Reject Reason."
                },
                "rejected_at": {
                    "type": "string",
                    "description": "Rejected at time."
                },
                "super_user_id": {
                    "type": "integer",
                    "description": "Company admin customer id."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-company-extension-interface"
                }
            },
            "required": [
                "street",
                "customer_group_id",
                "sales_representative_id",
                "reject_reason",
                "rejected_at",
                "super_user_id"
            ]
        },
        "company-data-company-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyInterface",
            "properties": {
                "applicable_payment_method": {
                    "type": "integer"
                },
                "available_payment_methods": {
                    "type": "string"
                },
                "use_config_settings": {
                    "type": "integer"
                },
                "quote_config": {
                    "$ref": "#/definitions/negotiable-quote-data-company-quote-config-interface"
                }
            }
        },
        "negotiable-quote-data-company-quote-config-interface": {
            "type": "object",
            "description": "Interface CompanyQuoteConfigInterface",
            "properties": {
                "company_id": {
                    "type": "string",
                    "description": "Company id"
                },
                "is_quote_enabled": {
                    "type": "boolean",
                    "description": "Quote enabled for company"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-company-quote-config-extension-interface"
                }
            },
            "required": [
                "is_quote_enabled"
            ]
        },
        "negotiable-quote-data-company-quote-config-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CompanyQuoteConfigInterface"
        },
        "framework-search-criteria-interface": {
            "type": "object",
            "description": "Search criteria interface.",
            "properties": {
                "filter_groups": {
                    "type": "array",
                    "description": "A list of filter groups.",
                    "items": {
                        "$ref": "#/definitions/framework-search-filter-group"
                    }
                },
                "sort_orders": {
                    "type": "array",
                    "description": "Sort order.",
                    "items": {
                        "$ref": "#/definitions/framework-sort-order"
                    }
                },
                "page_size": {
                    "type": "integer",
                    "description": "Page size."
                },
                "current_page": {
                    "type": "integer",
                    "description": "Current page."
                }
            },
            "required": [
                "filter_groups"
            ]
        },
        "framework-search-filter-group": {
            "type": "object",
            "description": "Groups two or more filters together using a logical OR",
            "properties": {
                "filters": {
                    "type": "array",
                    "description": "A list of filters in this group",
                    "items": {
                        "$ref": "#/definitions/framework-filter"
                    }
                }
            }
        },
        "framework-filter": {
            "type": "object",
            "description": "Filter which can be used by any methods from service layer.",
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Field"
                },
                "value": {
                    "type": "string",
                    "description": "Value"
                },
                "condition_type": {
                    "type": "string",
                    "description": "Condition type"
                }
            },
            "required": [
                "field",
                "value"
            ]
        },
        "framework-sort-order": {
            "type": "object",
            "description": "Data object for sort order.",
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Sorting field."
                },
                "direction": {
                    "type": "string",
                    "description": "Sorting direction."
                }
            },
            "required": [
                "field",
                "direction"
            ]
        },
        "company-data-role-search-results-interface": {
            "type": "object",
            "description": "Interface for role search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Roles list.",
                    "items": {
                        "$ref": "#/definitions/company-data-role-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-data-team-search-results-interface": {
            "type": "object",
            "description": "Interface for company team search results",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Teams list",
                    "items": {
                        "$ref": "#/definitions/company-data-team-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-data-team-interface": {
            "type": "object",
            "description": "Team interface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID"
                },
                "name": {
                    "type": "string",
                    "description": "Name"
                },
                "description": {
                    "type": "string",
                    "description": "Description"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-team-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            }
        },
        "company-data-team-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\TeamInterface"
        },
        "company-credit-data-credit-balance-options-interface": {
            "type": "object",
            "description": "Credit balance data transfer object interface.",
            "properties": {
                "purchase_order": {
                    "type": "string",
                    "description": "Purchase order number."
                },
                "order_increment": {
                    "type": "string",
                    "description": "Order increment."
                },
                "currency_display": {
                    "type": "string",
                    "description": "Currency display."
                },
                "currency_base": {
                    "type": "string",
                    "description": "Currency base."
                }
            },
            "required": [
                "purchase_order",
                "order_increment",
                "currency_display",
                "currency_base"
            ]
        },
        "company-credit-data-history-search-results-interface": {
            "type": "object",
            "description": "Interface for History search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "History list.",
                    "items": {
                        "$ref": "#/definitions/company-credit-data-history-data-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-credit-data-history-data-interface": {
            "type": "object",
            "description": "History data transfer object interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID."
                },
                "company_credit_id": {
                    "type": "integer",
                    "description": "Company credit id."
                },
                "user_id": {
                    "type": "integer",
                    "description": "User Id."
                },
                "user_type": {
                    "type": "integer",
                    "description": "User type: integration, admin, customer."
                },
                "currency_credit": {
                    "type": "string",
                    "description": "Currency code of credit."
                },
                "currency_operation": {
                    "type": "string",
                    "description": "Currency code of operation."
                },
                "rate": {
                    "type": "number",
                    "description": "Currency rate between credit and operation currencies."
                },
                "rate_credit": {
                    "type": "number",
                    "description": "Rate between credit and base currencies."
                },
                "amount": {
                    "type": "number",
                    "description": "Amount."
                },
                "balance": {
                    "type": "number",
                    "description": "Outstanding balance."
                },
                "credit_limit": {
                    "type": "number",
                    "description": "Credit limit."
                },
                "available_limit": {
                    "type": "number",
                    "description": "Available limit."
                },
                "type": {
                    "type": "integer",
                    "description": "Type of operation."
                },
                "datetime": {
                    "type": "string",
                    "description": "Operation datetime."
                },
                "purchase_order": {
                    "type": "string",
                    "description": "Purchase Order number."
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                }
            },
            "required": [
                "rate",
                "amount",
                "balance",
                "credit_limit"
            ]
        },
        "company-credit-data-credit-limit-interface": {
            "type": "object",
            "description": "Credit Limit data transfer object interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID."
                },
                "company_id": {
                    "type": "integer",
                    "description": "Company id."
                },
                "credit_limit": {
                    "type": "number",
                    "description": "Credit Limit."
                },
                "balance": {
                    "type": "number",
                    "description": "Balance."
                },
                "currency_code": {
                    "type": "string",
                    "description": "Currency Code."
                },
                "exceed_limit": {
                    "type": "boolean",
                    "description": "Exceed Limit."
                },
                "available_limit": {
                    "type": "number",
                    "description": "Available Limit."
                },
                "credit_comment": {
                    "type": "string",
                    "description": "Credit comment for company credit history."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-credit-data-credit-limit-extension-interface"
                }
            },
            "required": [
                "exceed_limit"
            ]
        },
        "company-credit-data-credit-limit-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\CompanyCredit\\Api\\Data\\CreditLimitInterface"
        },
        "company-credit-data-credit-limit-search-results-interface": {
            "type": "object",
            "description": "Interface for Credit Limit search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Credit Limit list.",
                    "items": {
                        "$ref": "#/definitions/company-credit-data-credit-data-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-credit-data-credit-data-interface": {
            "type": "object",
            "description": "Credit Data interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID."
                },
                "company_id": {
                    "type": "integer",
                    "description": "Company id."
                },
                "credit_limit": {
                    "type": "number",
                    "description": "Credit Limit."
                },
                "balance": {
                    "type": "number",
                    "description": "Balance."
                },
                "currency_code": {
                    "type": "string",
                    "description": "Currency Code."
                },
                "exceed_limit": {
                    "type": "boolean",
                    "description": "Exceed Limit."
                },
                "available_limit": {
                    "type": "number",
                    "description": "Available Limit."
                }
            },
            "required": [
                "exceed_limit"
            ]
        },
        "negotiable-quote-data-attachment-content-interface": {
            "type": "object",
            "description": "Attachment files content interface.",
            "properties": {
                "base64_encoded_data": {
                    "type": "string",
                    "description": "Media data (base64 encoded content)."
                },
                "type": {
                    "type": "string",
                    "description": "MIME type."
                },
                "name": {
                    "type": "string",
                    "description": "File name."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-attachment-content-extension-interface"
                }
            },
            "required": [
                "base64_encoded_data",
                "type",
                "name"
            ]
        },
        "negotiable-quote-data-attachment-content-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\AttachmentContentInterface"
        },
        "quote-data-address-interface": {
            "type": "object",
            "description": "Interface AddressInterface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "region": {
                    "type": "string",
                    "description": "Region name"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region id"
                },
                "region_code": {
                    "type": "string",
                    "description": "Region code"
                },
                "country_id": {
                    "type": "string",
                    "description": "Country id"
                },
                "street": {
                    "type": "array",
                    "description": "Street",
                    "items": {
                        "type": "string"
                    }
                },
                "company": {
                    "type": "string",
                    "description": "Company"
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone number"
                },
                "fax": {
                    "type": "string",
                    "description": "Fax number"
                },
                "postcode": {
                    "type": "string",
                    "description": "Postcode"
                },
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix"
                },
                "vat_id": {
                    "type": "string",
                    "description": "Vat id"
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer id"
                },
                "email": {
                    "type": "string",
                    "description": "Billing/shipping email"
                },
                "same_as_billing": {
                    "type": "integer",
                    "description": "Same as billing flag"
                },
                "customer_address_id": {
                    "type": "integer",
                    "description": "Customer address id"
                },
                "save_in_address_book": {
                    "type": "integer",
                    "description": "Save in address book flag"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-address-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "region",
                "region_id",
                "region_code",
                "country_id",
                "street",
                "telephone",
                "postcode",
                "city",
                "firstname",
                "lastname",
                "email"
            ]
        },
        "quote-data-address-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface",
            "properties": {
                "gift_registry_id": {
                    "type": "integer"
                }
            }
        },
        "quote-data-totals-interface": {
            "type": "object",
            "description": "Interface TotalsInterface",
            "properties": {
                "grand_total": {
                    "type": "number",
                    "description": "Grand total in quote currency"
                },
                "base_grand_total": {
                    "type": "number",
                    "description": "Grand total in base currency"
                },
                "subtotal": {
                    "type": "number",
                    "description": "Subtotal in quote currency"
                },
                "base_subtotal": {
                    "type": "number",
                    "description": "Subtotal in base currency"
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount in quote currency"
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Discount amount in base currency"
                },
                "subtotal_with_discount": {
                    "type": "number",
                    "description": "Subtotal in quote currency with applied discount"
                },
                "base_subtotal_with_discount": {
                    "type": "number",
                    "description": "Subtotal in base currency with applied discount"
                },
                "shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount in quote currency"
                },
                "base_shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount in base currency"
                },
                "shipping_discount_amount": {
                    "type": "number",
                    "description": "Shipping discount amount in quote currency"
                },
                "base_shipping_discount_amount": {
                    "type": "number",
                    "description": "Shipping discount amount in base currency"
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount in quote currency"
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Tax amount in base currency"
                },
                "weee_tax_applied_amount": {
                    "type": "number",
                    "description": "Item weee tax applied amount in quote currency."
                },
                "shipping_tax_amount": {
                    "type": "number",
                    "description": "Shipping tax amount in quote currency"
                },
                "base_shipping_tax_amount": {
                    "type": "number",
                    "description": "Shipping tax amount in base currency"
                },
                "subtotal_incl_tax": {
                    "type": "number",
                    "description": "Subtotal including tax in quote currency"
                },
                "base_subtotal_incl_tax": {
                    "type": "number",
                    "description": "Subtotal including tax in base currency"
                },
                "shipping_incl_tax": {
                    "type": "number",
                    "description": "Shipping including tax in quote currency"
                },
                "base_shipping_incl_tax": {
                    "type": "number",
                    "description": "Shipping including tax in base currency"
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code"
                },
                "quote_currency_code": {
                    "type": "string",
                    "description": "Quote currency code"
                },
                "coupon_code": {
                    "type": "string",
                    "description": "Applied coupon code"
                },
                "items_qty": {
                    "type": "integer",
                    "description": "Items qty"
                },
                "items": {
                    "type": "array",
                    "description": "Totals by items",
                    "items": {
                        "$ref": "#/definitions/quote-data-totals-item-interface"
                    }
                },
                "total_segments": {
                    "type": "array",
                    "description": "Dynamically calculated totals",
                    "items": {
                        "$ref": "#/definitions/quote-data-total-segment-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-totals-extension-interface"
                }
            },
            "required": [
                "weee_tax_applied_amount",
                "total_segments"
            ]
        },
        "quote-data-totals-item-interface": {
            "type": "object",
            "description": "Interface TotalsItemInterface",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "description": "Item id"
                },
                "price": {
                    "type": "number",
                    "description": "Item price in quote currency."
                },
                "base_price": {
                    "type": "number",
                    "description": "Item price in base currency."
                },
                "qty": {
                    "type": "number",
                    "description": "Item quantity."
                },
                "row_total": {
                    "type": "number",
                    "description": "Row total in quote currency."
                },
                "base_row_total": {
                    "type": "number",
                    "description": "Row total in base currency."
                },
                "row_total_with_discount": {
                    "type": "number",
                    "description": "Row total with discount in quote currency. Otherwise, null."
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount in quote currency. Otherwise, null."
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Tax amount in base currency. Otherwise, null."
                },
                "tax_percent": {
                    "type": "number",
                    "description": "Tax percent. Otherwise, null."
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount in quote currency. Otherwise, null."
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Discount amount in base currency. Otherwise, null."
                },
                "discount_percent": {
                    "type": "number",
                    "description": "Discount percent. Otherwise, null."
                },
                "price_incl_tax": {
                    "type": "number",
                    "description": "Price including tax in quote currency. Otherwise, null."
                },
                "base_price_incl_tax": {
                    "type": "number",
                    "description": "Price including tax in base currency. Otherwise, null."
                },
                "row_total_incl_tax": {
                    "type": "number",
                    "description": "Row total including tax in quote currency. Otherwise, null."
                },
                "base_row_total_incl_tax": {
                    "type": "number",
                    "description": "Row total including tax in base currency. Otherwise, null."
                },
                "options": {
                    "type": "string",
                    "description": "Item price in quote currency."
                },
                "weee_tax_applied_amount": {
                    "type": "number",
                    "description": "Item weee tax applied amount in quote currency."
                },
                "weee_tax_applied": {
                    "type": "string",
                    "description": "Item weee tax applied in quote currency."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-totals-item-extension-interface"
                },
                "name": {
                    "type": "string",
                    "description": "Product name. Otherwise, null."
                }
            },
            "required": [
                "item_id",
                "price",
                "base_price",
                "qty",
                "row_total",
                "base_row_total",
                "options",
                "weee_tax_applied_amount",
                "weee_tax_applied"
            ]
        },
        "quote-data-totals-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsItemInterface",
            "properties": {
                "negotiable_quote_item_totals": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-item-totals-interface"
                }
            }
        },
        "negotiable-quote-data-negotiable-quote-item-totals-interface": {
            "type": "object",
            "description": "Extension attribute for quote item totals model.",
            "properties": {
                "cost": {
                    "type": "number",
                    "description": "Cost for quote item."
                },
                "catalog_price": {
                    "type": "number",
                    "description": "Catalog price for quote item."
                },
                "base_catalog_price": {
                    "type": "number",
                    "description": "Catalog price for quote item in base currency."
                },
                "catalog_price_incl_tax": {
                    "type": "number",
                    "description": "Catalog price with included tax for quote item."
                },
                "base_catalog_price_incl_tax": {
                    "type": "number",
                    "description": "Catalog price with included tax for quote item in base currency."
                },
                "cart_price": {
                    "type": "number",
                    "description": "Cart price for quote item."
                },
                "base_cart_price": {
                    "type": "number",
                    "description": "Cart price for quote item in base currency."
                },
                "cart_tax": {
                    "type": "number",
                    "description": "Tax from catalog price for quote item."
                },
                "base_cart_tax": {
                    "type": "number",
                    "description": "Tax from catalog price for quote item in base currency."
                },
                "cart_price_incl_tax": {
                    "type": "number",
                    "description": "Cart price with included tax for quote item."
                },
                "base_cart_price_incl_tax": {
                    "type": "number",
                    "description": "Cart price with included tax for quote item in base currency."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-item-totals-extension-interface"
                }
            },
            "required": [
                "cost",
                "catalog_price",
                "base_catalog_price",
                "catalog_price_incl_tax",
                "base_catalog_price_incl_tax",
                "cart_price",
                "base_cart_price",
                "cart_tax",
                "base_cart_tax",
                "cart_price_incl_tax",
                "base_cart_price_incl_tax"
            ]
        },
        "negotiable-quote-data-negotiable-quote-item-totals-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemTotalsInterface"
        },
        "quote-data-total-segment-interface": {
            "type": "object",
            "description": "Interface TotalsInterface",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code"
                },
                "title": {
                    "type": "string",
                    "description": "Total title"
                },
                "value": {
                    "type": "number",
                    "description": "Total value"
                },
                "area": {
                    "type": "string",
                    "description": "Display area code."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-total-segment-extension-interface"
                }
            },
            "required": [
                "code",
                "value"
            ]
        },
        "quote-data-total-segment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalSegmentInterface",
            "properties": {
                "gift_cards": {
                    "type": "string"
                },
                "tax_grandtotal_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax-data-grand-total-details-interface"
                    }
                },
                "gw_order_id": {
                    "type": "string"
                },
                "gw_item_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gw_allow_gift_receipt": {
                    "type": "string"
                },
                "gw_add_card": {
                    "type": "string"
                },
                "gw_price": {
                    "type": "string"
                },
                "gw_base_price": {
                    "type": "string"
                },
                "gw_items_price": {
                    "type": "string"
                },
                "gw_items_base_price": {
                    "type": "string"
                },
                "gw_card_price": {
                    "type": "string"
                },
                "gw_card_base_price": {
                    "type": "string"
                },
                "gw_base_tax_amount": {
                    "type": "string"
                },
                "gw_tax_amount": {
                    "type": "string"
                },
                "gw_items_base_tax_amount": {
                    "type": "string"
                },
                "gw_items_tax_amount": {
                    "type": "string"
                },
                "gw_card_base_tax_amount": {
                    "type": "string"
                },
                "gw_card_tax_amount": {
                    "type": "string"
                },
                "gw_price_incl_tax": {
                    "type": "string"
                },
                "gw_base_price_incl_tax": {
                    "type": "string"
                },
                "gw_card_price_incl_tax": {
                    "type": "string"
                },
                "gw_card_base_price_incl_tax": {
                    "type": "string"
                },
                "gw_items_price_incl_tax": {
                    "type": "string"
                },
                "gw_items_base_price_incl_tax": {
                    "type": "string"
                }
            }
        },
        "tax-data-grand-total-details-interface": {
            "type": "object",
            "description": "Interface GrandTotalDetailsInterface",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "Tax amount value"
                },
                "rates": {
                    "type": "array",
                    "description": "Tax rates info",
                    "items": {
                        "$ref": "#/definitions/tax-data-grand-total-rates-interface"
                    }
                },
                "group_id": {
                    "type": "integer",
                    "description": "Group identifier"
                }
            },
            "required": [
                "amount",
                "rates",
                "group_id"
            ]
        },
        "tax-data-grand-total-rates-interface": {
            "type": "object",
            "description": "Interface GrandTotalRatesInterface",
            "properties": {
                "percent": {
                    "type": "string",
                    "description": "Tax percentage value"
                },
                "title": {
                    "type": "string",
                    "description": "Rate title"
                }
            },
            "required": [
                "percent",
                "title"
            ]
        },
        "quote-data-totals-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsInterface",
            "properties": {
                "coupon_label": {
                    "type": "string"
                },
                "base_customer_balance_amount": {
                    "type": "number"
                },
                "customer_balance_amount": {
                    "type": "number"
                },
                "negotiable_quote_totals": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-totals-interface"
                },
                "reward_points_balance": {
                    "type": "number"
                },
                "reward_currency_amount": {
                    "type": "number"
                },
                "base_reward_currency_amount": {
                    "type": "number"
                }
            }
        },
        "negotiable-quote-data-negotiable-quote-totals-interface": {
            "type": "object",
            "description": "Extension attribute for quote totals model.",
            "properties": {
                "items_count": {
                    "type": "integer",
                    "description": "The number of different items or products in the cart."
                },
                "quote_status": {
                    "type": "string",
                    "description": "Negotiable quote status."
                },
                "created_at": {
                    "type": "string",
                    "description": "The cart creation date and time."
                },
                "updated_at": {
                    "type": "string",
                    "description": "The cart last update date and time."
                },
                "customer_group": {
                    "type": "integer",
                    "description": "Customer group id."
                },
                "base_to_quote_rate": {
                    "type": "number",
                    "description": "Base currency to quote currency rate."
                },
                "cost_total": {
                    "type": "number",
                    "description": "Total cost for quote."
                },
                "base_cost_total": {
                    "type": "number",
                    "description": "Total cost for quote in base currency."
                },
                "original_total": {
                    "type": "number",
                    "description": "Original quote total."
                },
                "base_original_total": {
                    "type": "number",
                    "description": "Original quote total in base currency."
                },
                "original_tax": {
                    "type": "number",
                    "description": "Original tax amount for quote."
                },
                "base_original_tax": {
                    "type": "number",
                    "description": "Original tax amount for quote in base currency."
                },
                "original_price_incl_tax": {
                    "type": "number",
                    "description": "Original price with included tax for quote."
                },
                "base_original_price_incl_tax": {
                    "type": "number",
                    "description": "Original price with included tax for quote in base currency."
                },
                "negotiated_price_type": {
                    "type": "integer",
                    "description": "Negotiable quote type."
                },
                "negotiated_price_value": {
                    "type": "number",
                    "description": "Negotiable price value for quote."
                }
            },
            "required": [
                "items_count",
                "quote_status",
                "created_at",
                "updated_at",
                "customer_group",
                "base_to_quote_rate",
                "cost_total",
                "base_cost_total",
                "original_total",
                "base_original_total",
                "original_tax",
                "base_original_tax",
                "original_price_incl_tax",
                "base_original_price_incl_tax",
                "negotiated_price_type",
                "negotiated_price_value"
            ]
        },
        "negotiable-quote-data-comment-interface": {
            "type": "object",
            "description": "Interface CommentInterface",
            "properties": {
                "entity_id": {
                    "type": "integer",
                    "description": "Comment ID."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Negotiable quote ID, that this comment belongs to."
                },
                "creator_type": {
                    "type": "integer",
                    "description": "The comment creator type."
                },
                "is_decline": {
                    "type": "integer",
                    "description": "Is quote was declined by seller."
                },
                "is_draft": {
                    "type": "integer",
                    "description": "Is quote draft flag."
                },
                "creator_id": {
                    "type": "integer",
                    "description": "Comment creator ID."
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "created_at": {
                    "type": "string",
                    "description": "Comment created at."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-comment-extension-interface"
                },
                "attachments": {
                    "type": "array",
                    "description": "Existing attachments.",
                    "items": {
                        "$ref": "#/definitions/negotiable-quote-data-comment-attachment-interface"
                    }
                }
            },
            "required": [
                "entity_id",
                "parent_id",
                "creator_type",
                "is_decline",
                "is_draft",
                "creator_id",
                "comment",
                "created_at",
                "attachments"
            ]
        },
        "negotiable-quote-data-comment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentInterface"
        },
        "negotiable-quote-data-comment-attachment-interface": {
            "type": "object",
            "description": "Interface for quote comment attachment.",
            "properties": {
                "attachment_id": {
                    "type": "integer",
                    "description": "Attachment ID."
                },
                "comment_id": {
                    "type": "integer",
                    "description": "Comment ID."
                },
                "file_name": {
                    "type": "string",
                    "description": "File name."
                },
                "file_path": {
                    "type": "string",
                    "description": "File path."
                },
                "file_type": {
                    "type": "string",
                    "description": "File type."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-comment-attachment-extension-interface"
                }
            },
            "required": [
                "attachment_id",
                "comment_id",
                "file_name",
                "file_path",
                "file_type"
            ]
        },
        "negotiable-quote-data-comment-attachment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentAttachmentInterface"
        },
        "gift-card-account-data-gift-card-account-interface": {
            "type": "object",
            "description": "Gift Card Account data",
            "properties": {
                "gift_cards": {
                    "type": "array",
                    "description": "Cards codes",
                    "items": {
                        "type": "string"
                    }
                },
                "gift_cards_amount": {
                    "type": "number",
                    "description": "Cards amount in quote currency"
                },
                "base_gift_cards_amount": {
                    "type": "number",
                    "description": "Cards amount in base currency"
                },
                "gift_cards_amount_used": {
                    "type": "number",
                    "description": "Cards amount used in quote currency"
                },
                "base_gift_cards_amount_used": {
                    "type": "number",
                    "description": "Cards amount used in base currency"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/gift-card-account-data-gift-card-account-extension-interface"
                }
            },
            "required": [
                "gift_cards",
                "gift_cards_amount",
                "base_gift_cards_amount",
                "gift_cards_amount_used",
                "base_gift_cards_amount_used"
            ]
        },
        "gift-card-account-data-gift-card-account-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GiftCardAccount\\Api\\Data\\GiftCardAccountInterface"
        },
        "quote-data-payment-interface": {
            "type": "object",
            "description": "Interface PaymentInterface",
            "properties": {
                "po_number": {
                    "type": "string",
                    "description": "Purchase order number"
                },
                "method": {
                    "type": "string",
                    "description": "Payment method code"
                },
                "additional_data": {
                    "type": "array",
                    "description": "Payment additional details",
                    "items": {
                        "type": "string"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-payment-extension-interface"
                }
            },
            "required": [
                "method"
            ]
        },
        "quote-data-payment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\PaymentInterface",
            "properties": {
                "agreement_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "checkout-data-payment-details-interface": {
            "type": "object",
            "description": "Interface PaymentDetailsInterface",
            "properties": {
                "payment_methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/quote-data-payment-method-interface"
                    }
                },
                "totals": {
                    "$ref": "#/definitions/quote-data-totals-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/checkout-data-payment-details-extension-interface"
                }
            },
            "required": [
                "payment_methods",
                "totals"
            ]
        },
        "quote-data-payment-method-interface": {
            "type": "object",
            "description": "Interface PaymentMethodInterface",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Payment method code"
                },
                "title": {
                    "type": "string",
                    "description": "Payment method title"
                }
            },
            "required": [
                "code",
                "title"
            ]
        },
        "checkout-data-payment-details-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\PaymentDetailsInterface"
        },
        "quote-data-shipping-method-interface": {
            "type": "object",
            "description": "Interface ShippingMethodInterface",
            "properties": {
                "carrier_code": {
                    "type": "string",
                    "description": "Shipping carrier code."
                },
                "method_code": {
                    "type": "string",
                    "description": "Shipping method code."
                },
                "carrier_title": {
                    "type": "string",
                    "description": "Shipping carrier title. Otherwise, null."
                },
                "method_title": {
                    "type": "string",
                    "description": "Shipping method title. Otherwise, null."
                },
                "amount": {
                    "type": "number",
                    "description": "Shipping amount in store currency."
                },
                "base_amount": {
                    "type": "number",
                    "description": "Shipping amount in base currency."
                },
                "available": {
                    "type": "boolean",
                    "description": "The value of the availability flag for the current shipping method."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-shipping-method-extension-interface"
                },
                "error_message": {
                    "type": "string",
                    "description": "Shipping Error message."
                },
                "price_excl_tax": {
                    "type": "number",
                    "description": "Shipping price excl tax."
                },
                "price_incl_tax": {
                    "type": "number",
                    "description": "Shipping price incl tax."
                }
            },
            "required": [
                "carrier_code",
                "method_code",
                "amount",
                "base_amount",
                "available",
                "error_message",
                "price_excl_tax",
                "price_incl_tax"
            ]
        },
        "quote-data-shipping-method-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface"
        },
        "checkout-data-shipping-information-interface": {
            "type": "object",
            "description": "Interface ShippingInformationInterface",
            "properties": {
                "shipping_address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "billing_address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "shipping_method_code": {
                    "type": "string",
                    "description": "Shipping method code"
                },
                "shipping_carrier_code": {
                    "type": "string",
                    "description": "Carrier code"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/checkout-data-shipping-information-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "shipping_address",
                "shipping_method_code",
                "shipping_carrier_code"
            ]
        },
        "checkout-data-shipping-information-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface"
        },
        "catalog-data-category-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent category ID"
                },
                "name": {
                    "type": "string",
                    "description": "Category name"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Whether category is active"
                },
                "position": {
                    "type": "integer",
                    "description": "Category position"
                },
                "level": {
                    "type": "integer",
                    "description": "Category level"
                },
                "children": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "available_sort_by": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include_in_menu": {
                    "type": "boolean"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-category-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "name"
            ]
        },
        "catalog-data-category-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryInterface"
        },
        "catalog-data-product-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "sku": {
                    "type": "string",
                    "description": "Sku"
                },
                "name": {
                    "type": "string",
                    "description": "Name"
                },
                "attribute_set_id": {
                    "type": "integer",
                    "description": "Attribute set id"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "status": {
                    "type": "integer",
                    "description": "Status"
                },
                "visibility": {
                    "type": "integer",
                    "description": "Visibility"
                },
                "type_id": {
                    "type": "string",
                    "description": "Type id"
                },
                "created_at": {
                    "type": "string",
                    "description": "Created date"
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated date"
                },
                "weight": {
                    "type": "number",
                    "description": "Weight"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-extension-interface"
                },
                "product_links": {
                    "type": "array",
                    "description": "Product links info",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-link-interface"
                    }
                },
                "options": {
                    "type": "array",
                    "description": "List of product options",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                    }
                },
                "media_gallery_entries": {
                    "type": "array",
                    "description": "Media gallery entries",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-interface"
                    }
                },
                "tier_prices": {
                    "type": "array",
                    "description": "List of product tier prices",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-tier-price-interface"
                    }
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "sku"
            ]
        },
        "catalog-data-product-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductInterface",
            "properties": {
                "website_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "category_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-category-link-interface"
                    }
                },
                "stock_item": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-item-interface"
                },
                "bundle_product_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bundle-data-option-interface"
                    }
                },
                "downloadable_product_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/downloadable-data-link-interface"
                    }
                },
                "downloadable_product_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/downloadable-data-sample-interface"
                    }
                },
                "giftcard_amounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gift-card-data-giftcard-amount-interface"
                    }
                },
                "configurable_product_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-option-interface"
                    }
                },
                "configurable_product_links": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "catalog-data-category-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "position": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "string",
                    "description": "Category id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-category-link-extension-interface"
                }
            },
            "required": [
                "category_id"
            ]
        },
        "catalog-data-category-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryLinkInterface"
        },
        "catalog-inventory-data-stock-item-interface": {
            "type": "object",
            "description": "Interface StockItem",
            "properties": {
                "item_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "stock_id": {
                    "type": "integer",
                    "description": "Stock identifier"
                },
                "qty": {
                    "type": "number"
                },
                "is_in_stock": {
                    "type": "boolean",
                    "description": "Stock Availability"
                },
                "is_qty_decimal": {
                    "type": "boolean"
                },
                "show_default_notification_message": {
                    "type": "boolean"
                },
                "use_config_min_qty": {
                    "type": "boolean"
                },
                "min_qty": {
                    "type": "number",
                    "description": "Minimal quantity available for item status in stock"
                },
                "use_config_min_sale_qty": {
                    "type": "integer"
                },
                "min_sale_qty": {
                    "type": "number",
                    "description": "Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation"
                },
                "use_config_max_sale_qty": {
                    "type": "boolean"
                },
                "max_sale_qty": {
                    "type": "number",
                    "description": "Maximum Qty Allowed in Shopping Cart data wrapper"
                },
                "use_config_backorders": {
                    "type": "boolean"
                },
                "backorders": {
                    "type": "integer",
                    "description": "Backorders status"
                },
                "use_config_notify_stock_qty": {
                    "type": "boolean"
                },
                "notify_stock_qty": {
                    "type": "number",
                    "description": "Notify for Quantity Below data wrapper"
                },
                "use_config_qty_increments": {
                    "type": "boolean"
                },
                "qty_increments": {
                    "type": "number",
                    "description": "Quantity Increments data wrapper"
                },
                "use_config_enable_qty_inc": {
                    "type": "boolean"
                },
                "enable_qty_increments": {
                    "type": "boolean",
                    "description": "Whether Quantity Increments is enabled"
                },
                "use_config_manage_stock": {
                    "type": "boolean"
                },
                "manage_stock": {
                    "type": "boolean",
                    "description": "Can Manage Stock"
                },
                "low_stock_date": {
                    "type": "string"
                },
                "is_decimal_divided": {
                    "type": "boolean"
                },
                "stock_status_changed_auto": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-item-extension-interface"
                }
            },
            "required": [
                "qty",
                "is_in_stock",
                "is_qty_decimal",
                "show_default_notification_message",
                "use_config_min_qty",
                "min_qty",
                "use_config_min_sale_qty",
                "min_sale_qty",
                "use_config_max_sale_qty",
                "max_sale_qty",
                "use_config_backorders",
                "backorders",
                "use_config_notify_stock_qty",
                "notify_stock_qty",
                "use_config_qty_increments",
                "qty_increments",
                "use_config_enable_qty_inc",
                "enable_qty_increments",
                "use_config_manage_stock",
                "manage_stock",
                "low_stock_date",
                "is_decimal_divided",
                "stock_status_changed_auto"
            ]
        },
        "catalog-inventory-data-stock-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockItemInterface"
        },
        "bundle-data-option-interface": {
            "type": "object",
            "description": "Interface OptionInterface",
            "properties": {
                "option_id": {
                    "type": "integer",
                    "description": "Option id"
                },
                "title": {
                    "type": "string",
                    "description": "Option title"
                },
                "required": {
                    "type": "boolean",
                    "description": "Is required option"
                },
                "type": {
                    "type": "string",
                    "description": "Input type"
                },
                "position": {
                    "type": "integer",
                    "description": "Option position"
                },
                "sku": {
                    "type": "string",
                    "description": "Product sku"
                },
                "product_links": {
                    "type": "array",
                    "description": "Product links",
                    "items": {
                        "$ref": "#/definitions/bundle-data-link-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-option-extension-interface"
                }
            }
        },
        "bundle-data-link-interface": {
            "type": "object",
            "description": "Interface LinkInterface",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The identifier"
                },
                "sku": {
                    "type": "string",
                    "description": "Linked product sku"
                },
                "option_id": {
                    "type": "integer",
                    "description": "Option id"
                },
                "qty": {
                    "type": "number",
                    "description": "Qty"
                },
                "position": {
                    "type": "integer",
                    "description": "Position"
                },
                "is_default": {
                    "type": "boolean",
                    "description": "Is default"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "price_type": {
                    "type": "integer",
                    "description": "Price type"
                },
                "can_change_quantity": {
                    "type": "integer",
                    "description": "Whether quantity could be changed"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-link-extension-interface"
                }
            },
            "required": [
                "is_default",
                "price",
                "price_type"
            ]
        },
        "bundle-data-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\LinkInterface"
        },
        "bundle-data-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionInterface"
        },
        "downloadable-data-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Sample(or link) id"
                },
                "title": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                },
                "is_shareable": {
                    "type": "integer",
                    "description": "Shareable status"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "number_of_downloads": {
                    "type": "integer",
                    "description": "Of downloads per user"
                },
                "link_type": {
                    "type": "string"
                },
                "link_file": {
                    "type": "string",
                    "description": "relative file path"
                },
                "link_file_content": {
                    "$ref": "#/definitions/downloadable-data-file-content-interface"
                },
                "link_url": {
                    "type": "string",
                    "description": "Link url or null when type is 'file'"
                },
                "sample_type": {
                    "type": "string"
                },
                "sample_file": {
                    "type": "string",
                    "description": "relative file path"
                },
                "sample_file_content": {
                    "$ref": "#/definitions/downloadable-data-file-content-interface"
                },
                "sample_url": {
                    "type": "string",
                    "description": "file URL"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/downloadable-data-link-extension-interface"
                }
            },
            "required": [
                "sort_order",
                "is_shareable",
                "price",
                "link_type",
                "sample_type"
            ]
        },
        "downloadable-data-file-content-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "file_data": {
                    "type": "string",
                    "description": "Data (base64 encoded content)"
                },
                "name": {
                    "type": "string",
                    "description": "File name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/downloadable-data-file-content-extension-interface"
                }
            },
            "required": [
                "file_data",
                "name"
            ]
        },
        "downloadable-data-file-content-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\File\\ContentInterface"
        },
        "downloadable-data-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\LinkInterface"
        },
        "downloadable-data-sample-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Sample(or link) id"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Order index for sample"
                },
                "sample_type": {
                    "type": "string"
                },
                "sample_file": {
                    "type": "string",
                    "description": "relative file path"
                },
                "sample_file_content": {
                    "$ref": "#/definitions/downloadable-data-file-content-interface"
                },
                "sample_url": {
                    "type": "string",
                    "description": "file URL"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/downloadable-data-sample-extension-interface"
                }
            },
            "required": [
                "title",
                "sort_order",
                "sample_type"
            ]
        },
        "downloadable-data-sample-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\SampleInterface"
        },
        "gift-card-data-giftcard-amount-interface": {
            "type": "object",
            "description": "Interface GiftcardAmountInterface: this interface is used to serialize and deserialize EAV attribute giftcard_amounts",
            "properties": {
                "attribute_id": {
                    "type": "integer"
                },
                "website_id": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                },
                "website_value": {
                    "type": "number"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/gift-card-data-giftcard-amount-extension-interface"
                }
            },
            "required": [
                "attribute_id",
                "website_id",
                "value",
                "website_value"
            ]
        },
        "gift-card-data-giftcard-amount-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftcardAmountInterface"
        },
        "configurable-product-data-option-interface": {
            "type": "object",
            "description": "Interface OptionInterface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "attribute_id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "is_use_default": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-option-value-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/configurable-product-data-option-extension-interface"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "configurable-product-data-option-value-interface": {
            "type": "object",
            "description": "Interface OptionValueInterface",
            "properties": {
                "value_index": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/configurable-product-data-option-value-extension-interface"
                }
            },
            "required": [
                "value_index"
            ]
        },
        "configurable-product-data-option-value-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionValueInterface"
        },
        "configurable-product-data-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionInterface"
        },
        "catalog-data-product-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "sku": {
                    "type": "string",
                    "description": "SKU"
                },
                "link_type": {
                    "type": "string",
                    "description": "Link type"
                },
                "linked_product_sku": {
                    "type": "string",
                    "description": "Linked product sku"
                },
                "linked_product_type": {
                    "type": "string",
                    "description": "Linked product type (simple, virtual, etc)"
                },
                "position": {
                    "type": "integer",
                    "description": "Linked item position"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-link-extension-interface"
                }
            },
            "required": [
                "sku",
                "link_type",
                "linked_product_sku",
                "linked_product_type",
                "position"
            ]
        },
        "catalog-data-product-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkInterface",
            "properties": {
                "qty": {
                    "type": "number"
                }
            }
        },
        "catalog-data-product-custom-option-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "product_sku": {
                    "type": "string",
                    "description": "Product SKU"
                },
                "option_id": {
                    "type": "integer",
                    "description": "Option id"
                },
                "title": {
                    "type": "string",
                    "description": "Option title"
                },
                "type": {
                    "type": "string",
                    "description": "Option type"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Sort order"
                },
                "is_require": {
                    "type": "boolean",
                    "description": "Is require"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "price_type": {
                    "type": "string",
                    "description": "Price type"
                },
                "sku": {
                    "type": "string",
                    "description": "Sku"
                },
                "file_extension": {
                    "type": "string"
                },
                "max_characters": {
                    "type": "integer"
                },
                "image_size_x": {
                    "type": "integer"
                },
                "image_size_y": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-custom-option-values-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-custom-option-extension-interface"
                }
            },
            "required": [
                "product_sku",
                "title",
                "type",
                "sort_order",
                "is_require"
            ]
        },
        "catalog-data-product-custom-option-values-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Option title"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Sort order"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "price_type": {
                    "type": "string",
                    "description": "Price type"
                },
                "sku": {
                    "type": "string",
                    "description": "Sku"
                },
                "option_type_id": {
                    "type": "integer",
                    "description": "Option type id"
                }
            },
            "required": [
                "title",
                "sort_order",
                "price",
                "price_type"
            ]
        },
        "catalog-data-product-custom-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionInterface"
        },
        "catalog-data-product-attribute-media-gallery-entry-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Gallery entry ID"
                },
                "media_type": {
                    "type": "string",
                    "description": "Media type"
                },
                "label": {
                    "type": "string",
                    "description": "Gallery entry alternative text"
                },
                "position": {
                    "type": "integer",
                    "description": "Gallery entry position (sort order)"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "If gallery entry is hidden from product page"
                },
                "types": {
                    "type": "array",
                    "description": "Gallery entry image types (thumbnail, image, small_image etc)",
                    "items": {
                        "type": "string"
                    }
                },
                "file": {
                    "type": "string",
                    "description": "File path"
                },
                "content": {
                    "$ref": "#/definitions/framework-data-image-content-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-extension-interface"
                }
            },
            "required": [
                "media_type",
                "label",
                "position",
                "disabled",
                "types"
            ]
        },
        "framework-data-image-content-interface": {
            "type": "object",
            "description": "Image Content data interface",
            "properties": {
                "base64_encoded_data": {
                    "type": "string",
                    "description": "Media data (base64 encoded content)"
                },
                "type": {
                    "type": "string",
                    "description": "MIME type"
                },
                "name": {
                    "type": "string",
                    "description": "Image name"
                }
            },
            "required": [
                "base64_encoded_data",
                "type",
                "name"
            ]
        },
        "catalog-data-product-attribute-media-gallery-entry-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeMediaGalleryEntryInterface",
            "properties": {
                "video_content": {
                    "$ref": "#/definitions/framework-data-video-content-interface"
                }
            }
        },
        "framework-data-video-content-interface": {
            "type": "object",
            "description": "Video Content data interface",
            "properties": {
                "media_type": {
                    "type": "string",
                    "description": "MIME type"
                },
                "video_provider": {
                    "type": "string",
                    "description": "Provider"
                },
                "video_url": {
                    "type": "string",
                    "description": "Video URL"
                },
                "video_title": {
                    "type": "string",
                    "description": "Title"
                },
                "video_description": {
                    "type": "string",
                    "description": "Video Description"
                },
                "video_metadata": {
                    "type": "string",
                    "description": "Metadata"
                }
            },
            "required": [
                "media_type",
                "video_provider",
                "video_url",
                "video_title",
                "video_description",
                "video_metadata"
            ]
        },
        "catalog-data-product-tier-price-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "customer_group_id": {
                    "type": "integer",
                    "description": "Customer group id"
                },
                "qty": {
                    "type": "number",
                    "description": "Tier qty"
                },
                "value": {
                    "type": "number",
                    "description": "Price value"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-tier-price-extension-interface"
                }
            },
            "required": [
                "customer_group_id",
                "qty",
                "value"
            ]
        },
        "catalog-data-product-tier-price-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTierPriceInterface",
            "properties": {
                "percentage_value": {
                    "type": "number"
                },
                "website_id": {
                    "type": "integer"
                }
            }
        },
        "shared-catalog-data-shared-catalog-interface": {
            "type": "object",
            "description": "SharedCatalogInterface interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID."
                },
                "name": {
                    "type": "string",
                    "description": "Shared Catalog name."
                },
                "description": {
                    "type": "string",
                    "description": "Shared Catalog description."
                },
                "customer_group_id": {
                    "type": "integer",
                    "description": "Customer Group Id."
                },
                "type": {
                    "type": "integer",
                    "description": "Shared Catalog type."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created time for Shared Catalog."
                },
                "created_by": {
                    "type": "integer",
                    "description": "Admin id for Shared Catalog."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store id for Shared Catalog."
                },
                "tax_class_id": {
                    "type": "integer",
                    "description": "Tax class id."
                }
            },
            "required": [
                "name",
                "description",
                "customer_group_id",
                "type",
                "created_at",
                "created_by",
                "store_id",
                "tax_class_id"
            ]
        },
        "shared-catalog-data-search-results-interface": {
            "type": "object",
            "description": "Interface for Shared Catalog search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Shared Catalog list.",
                    "items": {
                        "$ref": "#/definitions/shared-catalog-data-shared-catalog-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "quote-data-cart-interface": {
            "type": "object",
            "description": "Interface CartInterface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Cart/quote ID."
                },
                "created_at": {
                    "type": "string",
                    "description": "Cart creation date and time. Otherwise, null."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Cart last update date and time. Otherwise, null."
                },
                "converted_at": {
                    "type": "string",
                    "description": "Cart conversion date and time. Otherwise, null."
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Active status flag value. Otherwise, null."
                },
                "is_virtual": {
                    "type": "boolean",
                    "description": "Virtual flag value. Otherwise, null."
                },
                "items": {
                    "type": "array",
                    "description": "Array of items. Otherwise, null.",
                    "items": {
                        "$ref": "#/definitions/quote-data-cart-item-interface"
                    }
                },
                "items_count": {
                    "type": "integer",
                    "description": "Number of different items or products in the cart. Otherwise, null."
                },
                "items_qty": {
                    "type": "number",
                    "description": "Total quantity of all cart items. Otherwise, null."
                },
                "customer": {
                    "$ref": "#/definitions/customer-data-customer-interface"
                },
                "billing_address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "reserved_order_id": {
                    "type": "integer",
                    "description": "Reserved order ID. Otherwise, null."
                },
                "orig_order_id": {
                    "type": "integer",
                    "description": "Original order ID. Otherwise, null."
                },
                "currency": {
                    "$ref": "#/definitions/quote-data-currency-interface"
                },
                "customer_is_guest": {
                    "type": "boolean",
                    "description": "For guest customers, false for logged in customers"
                },
                "customer_note": {
                    "type": "string",
                    "description": "Notice text"
                },
                "customer_note_notify": {
                    "type": "boolean",
                    "description": "Customer notification flag"
                },
                "customer_tax_class_id": {
                    "type": "integer",
                    "description": "Customer tax class ID."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store identifier"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-cart-extension-interface"
                }
            },
            "required": [
                "id",
                "customer",
                "store_id"
            ]
        },
        "quote-data-cart-item-interface": {
            "type": "object",
            "description": "Interface CartItemInterface",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "description": "Item ID. Otherwise, null."
                },
                "sku": {
                    "type": "string",
                    "description": "Product SKU. Otherwise, null."
                },
                "qty": {
                    "type": "number",
                    "description": "Product quantity."
                },
                "name": {
                    "type": "string",
                    "description": "Product name. Otherwise, null."
                },
                "price": {
                    "type": "number",
                    "description": "Product price. Otherwise, null."
                },
                "product_type": {
                    "type": "string",
                    "description": "Product type. Otherwise, null."
                },
                "quote_id": {
                    "type": "string",
                    "description": "Quote id."
                },
                "product_option": {
                    "$ref": "#/definitions/quote-data-product-option-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-cart-item-extension-interface"
                }
            },
            "required": [
                "qty",
                "quote_id"
            ]
        },
        "quote-data-product-option-interface": {
            "type": "object",
            "description": "Product option interface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-product-option-extension-interface"
                }
            }
        },
        "quote-data-product-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface",
            "properties": {
                "custom_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-custom-option-interface"
                    }
                },
                "bundle_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bundle-data-bundle-option-interface"
                    }
                },
                "downloadable_option": {
                    "$ref": "#/definitions/downloadable-data-downloadable-option-interface"
                },
                "giftcard_item_option": {
                    "$ref": "#/definitions/gift-card-data-gift-card-option-interface"
                },
                "configurable_item_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-configurable-item-option-value-interface"
                    }
                }
            }
        },
        "catalog-data-custom-option-interface": {
            "type": "object",
            "description": "Interface CustomOptionInterface",
            "properties": {
                "option_id": {
                    "type": "string",
                    "description": "Option id"
                },
                "option_value": {
                    "type": "string",
                    "description": "Option value"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-custom-option-extension-interface"
                }
            },
            "required": [
                "option_id",
                "option_value"
            ]
        },
        "catalog-data-custom-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface",
            "properties": {
                "file_info": {
                    "$ref": "#/definitions/framework-data-image-content-interface"
                }
            }
        },
        "bundle-data-bundle-option-interface": {
            "type": "object",
            "description": "Interface BundleOptionInterface",
            "properties": {
                "option_id": {
                    "type": "integer",
                    "description": "Bundle option id."
                },
                "option_qty": {
                    "type": "integer",
                    "description": "Bundle option quantity."
                },
                "option_selections": {
                    "type": "array",
                    "description": "Bundle option selection ids.",
                    "items": {
                        "type": "integer"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-bundle-option-extension-interface"
                }
            },
            "required": [
                "option_id",
                "option_qty",
                "option_selections"
            ]
        },
        "bundle-data-bundle-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\BundleOptionInterface"
        },
        "downloadable-data-downloadable-option-interface": {
            "type": "object",
            "description": "Downloadable Option",
            "properties": {
                "downloadable_links": {
                    "type": "array",
                    "description": "The list of downloadable links",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "required": [
                "downloadable_links"
            ]
        },
        "gift-card-data-gift-card-option-interface": {
            "type": "object",
            "description": "Interface GiftCardOptionInterface",
            "properties": {
                "giftcard_amount": {
                    "type": "string",
                    "description": "Gift card amount."
                },
                "custom_giftcard_amount": {
                    "type": "number",
                    "description": "Gift card open amount value."
                },
                "giftcard_sender_name": {
                    "type": "string",
                    "description": "Gift card sender name."
                },
                "giftcard_recipient_name": {
                    "type": "string",
                    "description": "Gift card recipient name."
                },
                "giftcard_sender_email": {
                    "type": "string",
                    "description": "Gift card sender email."
                },
                "giftcard_recipient_email": {
                    "type": "string",
                    "description": "Gift card recipient email."
                },
                "giftcard_message": {
                    "type": "string",
                    "description": "Giftcard message."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/gift-card-data-gift-card-option-extension-interface"
                }
            },
            "required": [
                "giftcard_amount",
                "giftcard_sender_name",
                "giftcard_recipient_name",
                "giftcard_sender_email",
                "giftcard_recipient_email"
            ]
        },
        "gift-card-data-gift-card-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface"
        },
        "configurable-product-data-configurable-item-option-value-interface": {
            "type": "object",
            "description": "Interface ConfigurableItemOptionValueInterface",
            "properties": {
                "option_id": {
                    "type": "string",
                    "description": "Option SKU"
                },
                "option_value": {
                    "type": "integer",
                    "description": "Item id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/configurable-product-data-configurable-item-option-value-extension-interface"
                }
            },
            "required": [
                "option_id"
            ]
        },
        "configurable-product-data-configurable-item-option-value-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\ConfigurableItemOptionValueInterface"
        },
        "quote-data-cart-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartItemInterface",
            "properties": {
                "negotiable_quote_item": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-item-interface"
                }
            }
        },
        "negotiable-quote-data-negotiable-quote-item-interface": {
            "type": "object",
            "description": "Interface CompanyQuoteConfigInterface",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "description": "Quote item id"
                },
                "original_price": {
                    "type": "number",
                    "description": "Quote item original price"
                },
                "original_tax_amount": {
                    "type": "number",
                    "description": "Quote item original tax amount"
                },
                "original_discount_amount": {
                    "type": "number",
                    "description": "Quote item original discount amount"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-item-extension-interface"
                }
            },
            "required": [
                "item_id",
                "original_price",
                "original_tax_amount",
                "original_discount_amount"
            ]
        },
        "negotiable-quote-data-negotiable-quote-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface"
        },
        "quote-data-currency-interface": {
            "type": "object",
            "description": "Interface CurrencyInterface",
            "properties": {
                "global_currency_code": {
                    "type": "string",
                    "description": "Global currency code"
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code"
                },
                "store_currency_code": {
                    "type": "string",
                    "description": "Store currency code"
                },
                "quote_currency_code": {
                    "type": "string",
                    "description": "Quote currency code"
                },
                "store_to_base_rate": {
                    "type": "number",
                    "description": "Store currency to base currency rate"
                },
                "store_to_quote_rate": {
                    "type": "number",
                    "description": "Store currency to quote currency rate"
                },
                "base_to_global_rate": {
                    "type": "number",
                    "description": "Base currency to global currency rate"
                },
                "base_to_quote_rate": {
                    "type": "number",
                    "description": "Base currency to quote currency rate"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-currency-extension-interface"
                }
            }
        },
        "quote-data-currency-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface"
        },
        "quote-data-cart-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface",
            "properties": {
                "shipping_assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/quote-data-shipping-assignment-interface"
                    }
                },
                "negotiable_quote": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-interface"
                }
            }
        },
        "quote-data-shipping-assignment-interface": {
            "type": "object",
            "description": "Interface ShippingAssignmentInterface",
            "properties": {
                "shipping": {
                    "$ref": "#/definitions/quote-data-shipping-interface"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/quote-data-cart-item-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-shipping-assignment-extension-interface"
                }
            },
            "required": [
                "shipping",
                "items"
            ]
        },
        "quote-data-shipping-interface": {
            "type": "object",
            "description": "Interface ShippingInterface",
            "properties": {
                "address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "method": {
                    "type": "string",
                    "description": "Shipping method"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-shipping-extension-interface"
                }
            },
            "required": [
                "address",
                "method"
            ]
        },
        "quote-data-shipping-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface"
        },
        "quote-data-shipping-assignment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface"
        },
        "negotiable-quote-data-negotiable-quote-interface": {
            "type": "object",
            "description": "Interface NegotiableQuoteInterface",
            "properties": {
                "quote_id": {
                    "type": "integer",
                    "description": "Negotiable quote ID."
                },
                "is_regular_quote": {
                    "type": "boolean",
                    "description": "Is regular quote."
                },
                "status": {
                    "type": "string",
                    "description": "Negotiable quote status."
                },
                "negotiated_price_type": {
                    "type": "integer",
                    "description": "Negotiated price type."
                },
                "negotiated_price_value": {
                    "type": "number",
                    "description": "Negotiated price value."
                },
                "shipping_price": {
                    "type": "number",
                    "description": "Proposed shipping price."
                },
                "quote_name": {
                    "type": "string",
                    "description": "Negotiable quote name."
                },
                "expiration_period": {
                    "type": "string",
                    "description": "Expiration period."
                },
                "email_notification_status": {
                    "type": "integer",
                    "description": "Email notification status."
                },
                "has_unconfirmed_changes": {
                    "type": "boolean",
                    "description": "Has unconfirmed changes."
                },
                "is_shipping_tax_changed": {
                    "type": "boolean",
                    "description": "Shipping tax changes."
                },
                "is_customer_price_changed": {
                    "type": "boolean",
                    "description": "Customer price changes."
                },
                "notifications": {
                    "type": "integer",
                    "description": "Quote notifications."
                },
                "applied_rule_ids": {
                    "type": "string",
                    "description": "Quote rules."
                },
                "is_address_draft": {
                    "type": "boolean",
                    "description": "Is address draft."
                },
                "deleted_sku": {
                    "type": "string",
                    "description": "Deleted products sku."
                },
                "creator_id": {
                    "type": "integer",
                    "description": "Quote creator id."
                },
                "creator_type": {
                    "type": "integer",
                    "description": "Quote creator type."
                },
                "original_total_price": {
                    "type": "number",
                    "description": "Quote original total price."
                },
                "base_original_total_price": {
                    "type": "number",
                    "description": "Quote original total price in base currency."
                },
                "negotiated_total_price": {
                    "type": "number",
                    "description": "Quote negotiated total price."
                },
                "base_negotiated_total_price": {
                    "type": "number",
                    "description": "Quote negotiated total price in base currency."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-extension-interface"
                }
            },
            "required": [
                "quote_id",
                "is_regular_quote",
                "status",
                "negotiated_price_type",
                "negotiated_price_value",
                "shipping_price",
                "quote_name",
                "expiration_period",
                "email_notification_status",
                "has_unconfirmed_changes",
                "is_shipping_tax_changed",
                "is_customer_price_changed",
                "notifications",
                "applied_rule_ids",
                "is_address_draft",
                "deleted_sku",
                "creator_id",
                "creator_type"
            ]
        },
        "negotiable-quote-data-negotiable-quote-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteInterface"
        },
        "requisition-list-data-requisition-list-interface": {
            "type": "object",
            "description": "Interface RequisitionListInterface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Requisition List ID"
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID"
                },
                "name": {
                    "type": "string",
                    "description": "Requisition List Name"
                },
                "updated_at": {
                    "type": "string",
                    "description": "Requisition List Update Time"
                },
                "description": {
                    "type": "string",
                    "description": "Requisition List Description"
                },
                "items": {
                    "type": "array",
                    "description": "Requisition List Items",
                    "items": {
                        "$ref": "#/definitions/requisition-list-data-requisition-list-item-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/requisition-list-data-requisition-list-extension-interface"
                }
            },
            "required": [
                "id",
                "customer_id",
                "name",
                "updated_at",
                "description",
                "items"
            ]
        },
        "requisition-list-data-requisition-list-item-interface": {
            "type": "object",
            "description": "Interface RequisitionListItemInterface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Requisition List ID."
                },
                "sku": {
                    "type": "integer",
                    "description": "Product SKU."
                },
                "requisition_list_id": {
                    "type": "integer",
                    "description": "Requisition List ID."
                },
                "qty": {
                    "type": "number",
                    "description": "Product Qty."
                },
                "options": {
                    "type": "array",
                    "description": "Requisition list item options.",
                    "items": {
                        "type": "string"
                    }
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store ID."
                },
                "added_at": {
                    "type": "string",
                    "description": "Added_at value."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/requisition-list-data-requisition-list-item-extension-interface"
                }
            },
            "required": [
                "id",
                "sku",
                "requisition_list_id",
                "qty",
                "options",
                "store_id",
                "added_at"
            ]
        },
        "requisition-list-data-requisition-list-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\RequisitionList\\Api\\Data\\RequisitionListItemInterface"
        },
        "requisition-list-data-requisition-list-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\RequisitionList\\Api\\Data\\RequisitionListInterface"
        }
    }
}